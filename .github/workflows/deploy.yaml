name: Deploy my laravel app to aws lambda

on:
  workflow_dispatch:
    inputs:
      name:
        description: Who to greet
        default: Allen

permissions:
  id-token: write
  contents: read

jobs:
  toggle-maintenance-mode:
    name: Deploy my laravel app to aws lambda
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::154471991214:role/github_action
          aws-region: us-west-2

      - name: Setup php
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3

      - name: Deploy to aws lambda
        run: |
          git clone "${{ env.LARAVEL_APP_GITHUB_URL }}" laravel-app

          cd laravel-app

          # install composer dependencies
          composer install --prefer-dist --optimize-autoloader --no-dev
          php artisan optimize
          php artisan config:clear

          # generate front-end assets
          npm install
          npm run build
          aws s3 sync public "s3://${{ env.ASSET_AWS_BUCKET }}"

          # enable bref pgsql extension in lambda
          # https://bref.sh/docs/environment/php#extensions-installed-but-disabled-by-default
          mkdir -p php/conf.d
          echo "extension=pdo_pgsql" > php/conf.d/pgsql.ini

          # remove unnecessary files
          rm -rf node_modules
          rm -rf tests
          rm -rf .git
          rm -rf .github
          rm -rf storage

          # zip the laravel app
          zip -r "../laravel-app.zip" .

          cd ..

          # deploy
          terraform init
          terraform apply \
            -var="app_name='${{ env.APP_NAME }}'" \
            -var="tag_service='${{ env.TAG_SERVICE }}'" \
            -var="tag_environment='${{ env.TAG_ENVIRONMENT }}'" \
            -var="tag_owner='${{ env.TAG_OWNER }}'" \
            -var="app_key='${{ secrets.APP_KEY }}'" \
            -var="app_url='${{ env.APP_URL }}'" \
            -var="asset_url='${{ env.ASSET_URL }}'" \
            -var="database_host='${{ secrets.DATABASE_HOST }}'" \
            -var="database_port='${{ secrets.DATABASE_PORT }}'" \
            -var="database_name='${{ secrets.DATABASE_NAME }}'" \
            -var="database_username='${{ secrets.DATABASE_USERNAME }}'" \
            -var="database_password='${{ secrets.DATABASE_PASSWORD }}'" \
            -var="aws_bucket='${{ env.AWS_BUCKET }}'" \
            -var="aws_url='${{ env.AWS_URL }}'" \
            -var="captcha_site_key='${{ secrets.CAPTCHA_SITE_KEY }}'" \
            -var="captcha_secret_key='${{ secrets.CAPTCHA_SECRET_KEY }}'" \
            -var="mail_password='${{ secrets.MAIL_PASSWORD }}'" \
            -var="scout_prefix='${{ secrets.SCOUT_PREFIX }}'" \
            -var="algolia_app_id='${{ secrets.ALGOLIA_APP_ID }}'" \
            -var="algolia_secret='${{ secrets.ALGOLIA_SECRET }}'" \
            -var="certificate_arn='${{ secrets.CERTIFICATE_ARN }}'" \
            -var="custom_domain_name='${{ env.CUSTOM_DOMAIN_NAME }}'" \
            -var="filename='./laravel-app.zip'" \
            -auto-approve
