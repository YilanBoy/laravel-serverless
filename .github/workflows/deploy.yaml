name: Deploy my laravel app to aws lambda

on:
  workflow_dispatch:
    inputs:
      name:
        description: Who to greet
        default: Allen

permissions:
  id-token: write
  contents: read

jobs:
  deploy-laravel-to-lambda:
    name: Deploy my laravel app to aws lambda
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::154471991214:role/github_action
          aws-region: us-west-2

      - name: Setup php
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3

      - name: Deploy to aws lambda
        run: |
          git clone "${{ vars.LARAVEL_APP_GITHUB_URL }}" laravel-app

          cd laravel-app

          # install composer dependencies
          composer install --prefer-dist --optimize-autoloader --no-dev
          php artisan optimize
          php artisan config:clear

          # generate front-end assets
          npm install
          npm run build

          # enable bref pgsql extension in lambda
          # https://bref.sh/docs/environment/php#extensions-installed-but-disabled-by-default
          mkdir -p php/conf.d
          echo "extension=pdo_pgsql" > php/conf.d/pgsql.ini

          # remove unnecessary files
          rm -rf node_modules
          rm -rf tests
          rm -rf .git
          rm -rf .github
          rm -rf storage

          # zip the laravel app
          zip -r "../laravel-app.zip" .

          cd ..

          # deploy
          terraform init
          terraform apply \
            -var="app_name=${{ vars.APP_NAME }}" \
            -var="tag_service=${{ vars.TAG_SERVICE }}" \
            -var="tag_environment=${{ vars.TAG_ENVIRONMENT }}" \
            -var="tag_owner=${{ vars.TAG_OWNER }}" \
            -var="app_key=${{ secrets.APP_KEY }}" \
            -var="app_url=${{ vars.APP_URL }}" \
            -var="asset_url=${{ vars.ASSET_URL }}" \
            -var="database_host=${{ secrets.DATABASE_HOST }}" \
            -var="database_port=${{ secrets.DATABASE_PORT }}" \
            -var="database_name=${{ secrets.DATABASE_NAME }}" \
            -var="database_username=${{ secrets.DATABASE_USERNAME }}" \
            -var="database_password=${{ secrets.DATABASE_PASSWORD }}" \
            -var="aws_bucket=${{ vars.AWS_BUCKET }}" \
            -var="aws_url=${{ vars.AWS_URL }}" \
            -var="captcha_site_key=${{ secrets.CAPTCHA_SITE_KEY }}" \
            -var="captcha_secret_key=${{ secrets.CAPTCHA_SECRET_KEY }}" \
            -var="mail_password=${{ secrets.MAIL_PASSWORD }}" \
            -var="scout_prefix=${{ secrets.SCOUT_PREFIX }}" \
            -var="algolia_app_id=${{ secrets.ALGOLIA_APP_ID }}" \
            -var="algolia_secret=${{ secrets.ALGOLIA_SECRET }}" \
            -var="certificate_arn=${{ secrets.CERTIFICATE_ARN }}" \
            -var="custom_domain_name=${{ vars.CUSTOM_DOMAIN_NAME }}" \
            -var="filename=./laravel-app.zip" \
            -auto-approve

          # sync front-end assets to s3 bucket
          aws s3 sync laravel-app/public "s3://${{ vars.ASSET_AWS_BUCKET }}"
